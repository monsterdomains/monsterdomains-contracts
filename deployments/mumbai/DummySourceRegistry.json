{
  "address": "0x4B6EA13F5382445F27B3d88e65E5C714E6C6fC61",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "getNamesByAddress",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        }
      ],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "node",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "setOwnerByLabelName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7d21b3e16124ed0a8a628d3a1dbb7443ffc4f33936a998366971295958db696e",
  "receipt": {
    "to": null,
    "from": "0xC04F124220694a2994b8C47D7adC43419B036293",
    "contractAddress": "0x4B6EA13F5382445F27B3d88e65E5C714E6C6fC61",
    "transactionIndex": 2,
    "gasUsed": "566495",
    "logsBloom": "0x
    "blockHash": "0xeba2e153b3a0d94fab287386304bbb1cef9c7fe778c9c7c2a55cd2b4f2cd0af5",
    "transactionHash": "0x7d21b3e16124ed0a8a628d3a1dbb7443ffc4f33936a998366971295958db696e",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 30909645,
        "transactionHash": "0x7d21b3e16124ed0a8a628d3a1dbb7443ffc4f33936a998366971295958db696e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c04f124220694a2994b8c47d7adc43419b036293",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000003389dc8a0bdaf00000000000000000000000000000000000000000000000009c15ea03fe03478000000000000000000000000000000000000000000000c32d66be89c9bd0b08200000000000000000000000000000000000000000000000009be2602773f76c9000000000000000000000000000000000000000000000c32d66f213a64716e31",
        "logIndex": 4,
        "blockHash": "0xeba2e153b3a0d94fab287386304bbb1cef9c7fe778c9c7c2a55cd2b4f2cd0af5"
      }
    ],
    "blockNumber": 30909645,
    "cumulativeGasUsed": "650917",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "43445803a792b59b290dfe234179bf78",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"getNamesByAddress\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"node\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwnerByLabelName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/DummyMigrationSource.sol\":\"DummySourceRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/test/DummyMigrationSource.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\ncontract DummySourceRegistry {\\n    // namehash('bnb')\\n    bytes32 constant private BASE_NODE = 0xdba5666821b22671387fe7ea11d7cc41ede85a5aa67c3e7b3d68ce6a661f389c;\\n\\n    struct Record {\\n        address owner;\\n        address resolver;\\n        uint64 ttl;\\n    }\\n\\n    mapping (bytes32 => Record) records;\\n    mapping (address => string[]) ownerNames;\\n\\n    // this is for testnet only\\n    function getNamesByAddress(address owner_) external view returns (string[] memory) {\\n        return ownerNames[owner_];\\n    }\\n\\n    // this is for testnet only\\n    function setOwnerByLabelName(string memory name_, address owner_) external {\\n        bytes32 label = keccak256(bytes(name_));\\n        bytes32 node = keccak256(abi.encodePacked(BASE_NODE, label));\\n        ownerNames[owner_].push(name_);\\n        setOwner(node, owner_);\\n    }\\n\\n    function setOwner(bytes32 node, address owner_) public {\\n        records[node].owner = owner_;\\n    }\\n\\n    function owner(bytes32 node) public view returns (address) {\\n        return records[node].owner;\\n    }\\n}\\n\\n\\ncontract DummySourceBaseRegistrar {\\n    mapping (uint256 => uint256) expiries;\\n\\n    // this is for testnet only\\n    function setNameExpiresByLabelName(string memory name_, uint256 expiry) public {\\n        bytes32 label = keccak256(bytes(name_));\\n        expiries[uint256(label)] = expiry;\\n    } \\n    \\n    function setNameExpires(uint256 id, uint256 expiry) public {\\n        expiries[id] = expiry;\\n    }   \\n    function nameExpires(uint256 id) public view returns (uint256) {\\n        return expiries[id];\\n    }\\n}\",\"keccak256\":\"0x867cf3b5042cf37fef2bd2a4e6e1c0f5c907dcabcb83004975005ad10735b2bc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061094e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806302571be3146100515780634a5a8058146100815780635b0fc9c3146100b1578063b47ed0ab146100cd575b600080fd5b61006b600480360381019061006691906104db565b6100e9565b60405161007891906106a8565b60405180910390f35b61009b600480360381019061009691906104b2565b610128565b6040516100a891906106c3565b60405180910390f35b6100cb60048036038101906100c69190610504565b610240565b005b6100e760048036038101906100e29190610540565b610298565b005b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102355783829060005260206000200180546101a89061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101d49061080e565b80156102215780601f106101f657610100808354040283529160200191610221565b820191906000526020600020905b81548152906001019060200180831161020457829003601f168201915b505050505081526020019060010190610189565b505050509050919050565b8060008084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008280519060200120905060007fdba5666821b22671387fe7ea11d7cc41ede85a5aa67c3e7b3d68ce6a661f389c60001b826040516020016102dc92919061067c565b604051602081830303815290604052805190602001209050600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061036c92919061037d565b506103778184610240565b50505050565b8280546103899061080e565b90600052602060002090601f0160209004810192826103ab57600085556103f2565b82601f106103c457805160ff19168380011785556103f2565b828001600101855582156103f2579182015b828111156103f15782518255916020019190600101906103d6565b5b5090506103ff9190610403565b5090565b5b8082111561041c576000816000905550600101610404565b5090565b600061043361042e8461070a565b6106e5565b90508281526020810184848401111561044b57600080fd5b6104568482856107cc565b509392505050565b60008135905061046d816108ea565b92915050565b60008135905061048281610901565b92915050565b600082601f83011261049957600080fd5b81356104a9848260208601610420565b91505092915050565b6000602082840312156104c457600080fd5b60006104d28482850161045e565b91505092915050565b6000602082840312156104ed57600080fd5b60006104fb84828501610473565b91505092915050565b6000806040838503121561051757600080fd5b600061052585828601610473565b92505060206105368582860161045e565b9150509250929050565b6000806040838503121561055357600080fd5b600083013567ffffffffffffffff81111561056d57600080fd5b61057985828601610488565b925050602061058a8582860161045e565b9150509250929050565b60006105a08383610643565b905092915050565b6105b181610790565b82525050565b60006105c28261074b565b6105cc818561076e565b9350836020820285016105de8561073b565b8060005b8581101561061a57848403895281516105fb8582610594565b945061060683610761565b925060208a019950506001810190506105e2565b50829750879550505050505092915050565b61063d610638826107a2565b610871565b82525050565b600061064e82610756565b610658818561077f565b93506106688185602086016107db565b610671816108d9565b840191505092915050565b6000610688828561062c565b602082019150610698828461062c565b6020820191508190509392505050565b60006020820190506106bd60008301846105a8565b92915050565b600060208201905081810360008301526106dd81846105b7565b905092915050565b60006106ef610700565b90506106fb8282610840565b919050565b6000604051905090565b600067ffffffffffffffff821115610725576107246108aa565b5b61072e826108d9565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061079b826107ac565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156107f95780820151818401526020810190506107de565b83811115610808576000848401525b50505050565b6000600282049050600182168061082657607f821691505b6020821081141561083a5761083961087b565b5b50919050565b610849826108d9565b810181811067ffffffffffffffff82111715610868576108676108aa565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6108f381610790565b81146108fe57600080fd5b50565b61090a816107a2565b811461091557600080fd5b5056fea264697066735822122019a0abf60c50206835c2dd0b88f429c039ee54881ac10e98bdca8c5c86be743364736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806302571be3146100515780634a5a8058146100815780635b0fc9c3146100b1578063b47ed0ab146100cd575b600080fd5b61006b600480360381019061006691906104db565b6100e9565b60405161007891906106a8565b60405180910390f35b61009b600480360381019061009691906104b2565b610128565b6040516100a891906106c3565b60405180910390f35b6100cb60048036038101906100c69190610504565b610240565b005b6100e760048036038101906100e29190610540565b610298565b005b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102355783829060005260206000200180546101a89061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101d49061080e565b80156102215780601f106101f657610100808354040283529160200191610221565b820191906000526020600020905b81548152906001019060200180831161020457829003601f168201915b505050505081526020019060010190610189565b505050509050919050565b8060008084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008280519060200120905060007fdba5666821b22671387fe7ea11d7cc41ede85a5aa67c3e7b3d68ce6a661f389c60001b826040516020016102dc92919061067c565b604051602081830303815290604052805190602001209050600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150908051906020019061036c92919061037d565b506103778184610240565b50505050565b8280546103899061080e565b90600052602060002090601f0160209004810192826103ab57600085556103f2565b82601f106103c457805160ff19168380011785556103f2565b828001600101855582156103f2579182015b828111156103f15782518255916020019190600101906103d6565b5b5090506103ff9190610403565b5090565b5b8082111561041c576000816000905550600101610404565b5090565b600061043361042e8461070a565b6106e5565b90508281526020810184848401111561044b57600080fd5b6104568482856107cc565b509392505050565b60008135905061046d816108ea565b92915050565b60008135905061048281610901565b92915050565b600082601f83011261049957600080fd5b81356104a9848260208601610420565b91505092915050565b6000602082840312156104c457600080fd5b60006104d28482850161045e565b91505092915050565b6000602082840312156104ed57600080fd5b60006104fb84828501610473565b91505092915050565b6000806040838503121561051757600080fd5b600061052585828601610473565b92505060206105368582860161045e565b9150509250929050565b6000806040838503121561055357600080fd5b600083013567ffffffffffffffff81111561056d57600080fd5b61057985828601610488565b925050602061058a8582860161045e565b9150509250929050565b60006105a08383610643565b905092915050565b6105b181610790565b82525050565b60006105c28261074b565b6105cc818561076e565b9350836020820285016105de8561073b565b8060005b8581101561061a57848403895281516105fb8582610594565b945061060683610761565b925060208a019950506001810190506105e2565b50829750879550505050505092915050565b61063d610638826107a2565b610871565b82525050565b600061064e82610756565b610658818561077f565b93506106688185602086016107db565b610671816108d9565b840191505092915050565b6000610688828561062c565b602082019150610698828461062c565b6020820191508190509392505050565b60006020820190506106bd60008301846105a8565b92915050565b600060208201905081810360008301526106dd81846105b7565b905092915050565b60006106ef610700565b90506106fb8282610840565b919050565b6000604051905090565b600067ffffffffffffffff821115610725576107246108aa565b5b61072e826108d9565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061079b826107ac565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156107f95780820151818401526020810190506107de565b83811115610808576000848401525b50505050565b6000600282049050600182168061082657607f821691505b6020821081141561083a5761083961087b565b5b50919050565b610849826108d9565b810181811067ffffffffffffffff82111715610868576108676108aa565b5b80604052505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6108f381610790565b81146108fe57600080fd5b50565b61090a816107a2565b811461091557600080fd5b5056fea264697066735822122019a0abf60c50206835c2dd0b88f429c039ee54881ac10e98bdca8c5c86be743364736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9243,
        "contract": "contracts/test/DummyMigrationSource.sol:DummySourceRegistry",
        "label": "records",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(Record)9238_storage)"
      },
      {
        "astId": 9248,
        "contract": "contracts/test/DummyMigrationSource.sol:DummySourceRegistry",
        "label": "ownerNames",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_bytes32,t_struct(Record)9238_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct DummySourceRegistry.Record)",
        "numberOfBytes": "32",
        "value": "t_struct(Record)9238_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Record)9238_storage": {
        "encoding": "inplace",
        "label": "struct DummySourceRegistry.Record",
        "members": [
          {
            "astId": 9233,
            "contract": "contracts/test/DummyMigrationSource.sol:DummySourceRegistry",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9235,
            "contract": "contracts/test/DummyMigrationSource.sol:DummySourceRegistry",
            "label": "resolver",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 9237,
            "contract": "contracts/test/DummyMigrationSource.sol:DummySourceRegistry",
            "label": "ttl",
            "offset": 20,
            "slot": "1",
            "type": "t_uint64"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}
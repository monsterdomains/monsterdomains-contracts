{
  "address": "0x95Ca0039eAD8A6c8Cb5B9F35A604B21CcC335290",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wishCap_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wishPhraseStart_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wishPhraseEnd_",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "baseNode_",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "wish",
          "type": "string"
        }
      ],
      "name": "WishAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "names",
          "type": "string[]"
        }
      ],
      "name": "addReservedNames",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "names",
          "type": "string[]"
        }
      ],
      "name": "addWishes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseNode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blocktime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "needAuction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "reservedNameMap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reservedNames",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "baseNode_",
          "type": "bytes32"
        }
      ],
      "name": "setBaseNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wishCap_",
          "type": "uint256"
        }
      ],
      "name": "setWishCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wishPhraseStart_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wishPhraseEnd_",
          "type": "uint256"
        }
      ],
      "name": "setWishPhraseTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "userHasWish",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userWishes",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wishCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "wishCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wishPhraseEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wishPhraseStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "wishes",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xfb86a437dfba56c8de72dd989d2e79cf26f0be97dcc6986f33873f82ed398fce",
  "receipt": {
    "to": null,
    "from": "0xC04F124220694a2994b8C47D7adC43419B036293",
    "contractAddress": "0x95Ca0039eAD8A6c8Cb5B9F35A604B21CcC335290",
    "transactionIndex": 71,
    "gasUsed": "1922653",
    "logsBloom": "0x
    "blockHash": "0x18b0e4a70296e7c806df8ee9737c9d710692604bdc6a84885ed716f406657906",
    "transactionHash": "0xfb86a437dfba56c8de72dd989d2e79cf26f0be97dcc6986f33873f82ed398fce",
    "logs": [
      {
        "transactionIndex": 71,
        "blockNumber": 25540846,
        "transactionHash": "0xfb86a437dfba56c8de72dd989d2e79cf26f0be97dcc6986f33873f82ed398fce",
        "address": "0x95Ca0039eAD8A6c8Cb5B9F35A604B21CcC335290",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c04f124220694a2994b8c47d7adc43419b036293"
        ],
        "data": "0x",
        "logIndex": 150,
        "blockHash": "0x18b0e4a70296e7c806df8ee9737c9d710692604bdc6a84885ed716f406657906"
      }
    ],
    "blockNumber": 25540846,
    "cumulativeGasUsed": "8195924",
    "status": 1,
    "byzantium": true
  },
  "args": [
    5,
    1675743226,
    1678335226,
    "0xdba5666821b22671387fe7ea11d7cc41ede85a5aa67c3e7b3d68ce6a661f389c"
  ],
  "numDeployments": 1,
  "solcInputHash": "e90400b39657e40d2d1255b8eeb7f136",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wishCap_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wishPhraseStart_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wishPhraseEnd_\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"baseNode_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"wish\",\"type\":\"string\"}],\"name\":\"WishAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"}],\"name\":\"addReservedNames\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"names\",\"type\":\"string[]\"}],\"name\":\"addWishes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseNode\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blocktime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"needAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"reservedNameMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reservedNames\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"baseNode_\",\"type\":\"bytes32\"}],\"name\":\"setBaseNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wishCap_\",\"type\":\"uint256\"}],\"name\":\"setWishCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wishPhraseStart_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wishPhraseEnd_\",\"type\":\"uint256\"}],\"name\":\"setWishPhraseTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"userHasWish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userWishes\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wishCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"wishCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wishPhraseEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wishPhraseStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"wishes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/business/Wishlist.sol\":\"Wishlist\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/business/IWishlist.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n\\ninterface IWishlist {\\n    event WishAdded(address indexed user, string indexed wish);\\n\\n    function baseNode() external view returns (bytes32);\\n\\n    function wishCounts(bytes32 namehash) external view returns (uint256);\\n\\n    function addWishes(string[] memory name) external;\\n\\n    function needAuction(string memory name) external view returns (bool);\\n\\n    function userWishes(address user) external view returns (string[] memory);\\n\\n    function userHasWish(address user, string memory name) external view returns (bool);\\n\\n    // Dev side will add some globally reserved domains to let all users be able to join the \\n    // auction for the added domains\\n    function addReservedNames(string[] memory names) external;\\n}\\n\",\"keccak256\":\"0x6e4670fd9d0e067a275bb22bf4ce56e1a827650ca5f4b4f8c256b335f108a530\",\"license\":\"MIT\"},\"contracts/business/Wishlist.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../cidregistrar/StringUtils.sol\\\";\\nimport \\\"./IWishlist.sol\\\";\\n\\ncontract Wishlist is Ownable, IWishlist {\\n    using StringUtils for *;\\n\\n    mapping (bytes32 => uint256) override public wishCounts;\\n\\n    mapping (address => string[]) public wishes;\\n\\n    bytes32 override public baseNode;\\n\\n    // wish list limit per user\\n    uint256 public wishCap;\\n\\n    // wishlist phrase period\\n    uint256 public wishPhraseStart;\\n    uint256 public wishPhraseEnd;\\n\\n    // reserved names for global auction, token id => availability\\n    mapping (bytes32 => bool) public reservedNameMap;\\n    string[] public reservedNames;\\n\\n    constructor(uint256 wishCap_, uint256 wishPhraseStart_, uint256 wishPhraseEnd_, bytes32 baseNode_) {\\n        setWishCap(wishCap_);\\n        setWishPhraseTime(wishPhraseStart_, wishPhraseEnd_);\\n        setBaseNode(baseNode_);\\n    }\\n\\n    function setWishCap(uint256 wishCap_) public onlyOwner {\\n        require(wishCap_ > 0, \\\"invalid parameters\\\");\\n        wishCap = wishCap_;\\n    }\\n\\n    function setWishPhraseTime(uint256 wishPhraseStart_, uint256 wishPhraseEnd_) public onlyOwner {\\n        require(wishPhraseStart_ > 0 && wishPhraseStart_ < wishPhraseEnd_, \\\"invalid parameters\\\");\\n        wishPhraseStart = wishPhraseStart_;\\n        wishPhraseEnd = wishPhraseEnd_;\\n    }\\n\\n    function setBaseNode(bytes32 baseNode_) public onlyOwner {\\n        require(baseNode_ != bytes32(0), \\\"invalid parameters\\\");\\n        baseNode = baseNode_;\\n    }\\n\\n    function blocktime() public view returns (uint) {\\n        return block.timestamp;\\n    } \\n\\n    function addWishes(string[] memory names) override external {\\n        require(block.timestamp > wishPhraseStart && block.timestamp < wishPhraseEnd, \\\"not wishlist phrase\\\");\\n        for (uint256 i = 0; i < names.length; ++i) {\\n            addWish_(names[i]);\\n        }\\n    }\\n\\n    // note: name is label name without suffix\\n    function addWish_(string memory name) internal {\\n        // empty name not allowed\\n        require(name.strlen() > 0, \\\"empty name\\\");\\n\\n        bytes32 namehash = keccak256(bytes(name));\\n        require(wishes[msg.sender].length < wishCap, \\\"exceed wish cap\\\");\\n\\n        // duplicated wish is not allowed\\n        string[] storage names = wishes[msg.sender];\\n        for (uint256 i = 0; i < names.length; i++) {\\n            require(keccak256(bytes(names[i])) != namehash, \\\"duplicated wish\\\"); \\n        }\\n\\n        wishes[msg.sender].push(name);\\n        wishCounts[namehash]++;\\n        emit WishAdded(msg.sender, name);\\n    }\\n\\n    // if more than 1 user wished this name, this name need auction\\n    function needAuction(string memory name) override external view returns (bool) {\\n        return wishCounts[keccak256(bytes(name))] > 1;\\n    }\\n\\n    function userWishes(address user) override external view returns (string[] memory) {\\n        return wishes[user];\\n    }\\n\\n    function userHasWish(address user, string memory name) override public view returns (bool) {\\n        bytes32 namehash = keccak256(bytes(name));\\n        string[] storage names = wishes[user];\\n        for (uint256 i = 0; i < names.length; i++) {\\n            if(keccak256(bytes(names[i])) == namehash) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    function addReservedNames(string[] memory names) override external onlyOwner {\\n        for (uint256 i = 0; i < names.length; ++i) {\\n            bytes32 namehash = keccak256(bytes(names[i]));\\n            require(!reservedNameMap[namehash], \\\"duplicated name\\\");\\n            reservedNameMap[namehash] = true;\\n            reservedNames.push(names[i]);\\n        }\\n    }\\n\\n}\\n\",\"keccak256\":\"0xfc77047284f88c2e05965a497195dbd2bec77d1f38e90081f4ad8d24b9275640\",\"license\":\"MIT\"},\"contracts/cidregistrar/StringUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\nlibrary StringUtils {\\n    /**\\n     * @dev Returns the length of a given string\\n     *\\n     * @param s The string to measure the length of\\n     * @return The length of the input string\\n     */\\n    function strlen(string memory s) internal pure returns (uint) {\\n        uint len;\\n        uint i = 0;\\n        uint bytelength = bytes(s).length;\\n        for(len = 0; i < bytelength; len++) {\\n            bytes1 b = bytes(s)[i];\\n            if(b < 0x80) {\\n                i += 1;\\n            } else if (b < 0xE0) {\\n                i += 2;\\n            } else if (b < 0xF0) {\\n                i += 3;\\n            } else if (b < 0xF8) {\\n                i += 4;\\n            } else if (b < 0xFC) {\\n                i += 5;\\n            } else {\\n                i += 6;\\n            }\\n        }\\n        return len;\\n    }\\n}\\n\",\"keccak256\":\"0xad6fc0b8a2f56c04a0db481bbdb77f005cecf12356a9367f7acec572058712a1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620024e8380380620024e8833981810160405281019062000037919062000380565b620000576200004b6200009560201b60201c565b6200009d60201b60201c565b62000068846200016160201b60201c565b6200007a8383620001c160201b60201c565b6200008b816200023560201b60201c565b5050505062000529565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001716200029860201b60201c565b60008111620001b7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ae906200045c565b60405180910390fd5b8060048190555050565b620001d16200029860201b60201c565b600082118015620001e157508082105b62000223576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200021a906200045c565b60405180910390fd5b81600581905550806006819055505050565b620002456200029860201b60201c565b6000801b8114156200028e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000285906200045c565b60405180910390fd5b8060038190555050565b620002a86200009560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002ce6200032960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000327576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200031e906200043a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000815190506200036381620004f5565b92915050565b6000815190506200037a816200050f565b92915050565b600080600080608085870312156200039757600080fd5b6000620003a78782880162000369565b9450506020620003ba8782880162000369565b9350506040620003cd8782880162000369565b9250506060620003e08782880162000352565b91505092959194509250565b6000620003fb6020836200047e565b91506200040882620004a3565b602082019050919050565b6000620004226012836200047e565b91506200042f82620004cc565b602082019050919050565b600060208201905081810360008301526200045581620003ec565b9050919050565b60006020820190508181036000830152620004778162000413565b9050919050565b600082825260208201905092915050565b6000819050919050565b6000819050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f696e76616c696420706172616d65746572730000000000000000000000000000600082015250565b62000500816200048f565b81146200050c57600080fd5b50565b6200051a8162000499565b81146200052657600080fd5b50565b611faf80620005396000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806374bcbcc8116100ad578063ddf7fcb011610071578063ddf7fcb014610331578063e4af45781461034f578063f2fde38b1461036b578063f70236a414610387578063f9d0974f146103b75761012c565b806374bcbcc81461028b57806375c62395146102a957806376450677146102c55780638da5cb5b146102f5578063a9b12c4c146103135761012c565b8063478e40a0116100f4578063478e40a0146101e75780634f8342fc146102035780634fa71bd31461022157806359e36cf014610251578063715018a6146102815761012c565b806313e9eaab14610131578063164d17c71461014d5780631b84d0e21461017d578063290199f7146101ad578063354287d4146101cb575b600080fd5b61014b600480360381019061014691906114d3565b6103e7565b005b610167600480360381019061016291906114d3565b61043f565b604051610174919061190c565b60405180910390f35b610197600480360381019061019291906114d3565b61045f565b6040516101a49190611a64565b60405180910390f35b6101b5610477565b6040516101c29190611a64565b60405180910390f35b6101e560048036038101906101e09190611492565b61047d565b005b61020160048036038101906101fc9190611492565b610538565b005b61020b6106b7565b6040516102189190611a64565b60405180910390f35b61023b60048036038101906102369190611456565b6106bd565b6040516102489190611942565b60405180910390f35b61026b600480360381019061026691906114fc565b610776565b604051610278919061190c565b60405180910390f35b61028961079c565b005b6102936107b0565b6040516102a09190611a64565b60405180910390f35b6102c360048036038101906102be919061153d565b6107b6565b005b6102df60048036038101906102da91906113d9565b61080b565b6040516102ec91906118ea565b60405180910390f35b6102fd610923565b60405161030a91906118cf565b60405180910390f35b61031b61094c565b6040516103289190611a64565b60405180910390f35b610339610954565b6040516103469190611927565b60405180910390f35b61036960048036038101906103649190611566565b61095a565b005b610385600480360381019061038091906113d9565b6109c2565b005b6103a1600480360381019061039c9190611402565b610a46565b6040516103ae919061190c565b60405180910390f35b6103d160048036038101906103cc919061153d565b610b31565b6040516103de9190611942565b60405180910390f35b6103ef610bdd565b6000801b811415610435576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042c90611a44565b60405180910390fd5b8060038190555050565b60076020528060005260406000206000915054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b60045481565b6005544211801561048f575060065442105b6104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c5906119a4565b60405180910390fd5b60005b815181101561053457610523828281518110610516577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151610c5b565b8061052d90611cdf565b90506104d1565b5050565b610540610bdd565b60005b81518110156106b3576000828281518110610587577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518051906020012090506007600082815260200190815260200160002060009054906101000a900460ff16156105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090611a04565b60405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506008838381518110610660577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906106a09291906111df565b5050806106ac90611cdf565b9050610543565b5050565b60065481565b600260205281600052604060002081815481106106d957600080fd5b906000526020600020016000915091505080546106f590611c7c565b80601f016020809104026020016040519081016040528092919081815260200182805461072190611c7c565b801561076e5780601f106107435761010080835404028352916020019161076e565b820191906000526020600020905b81548152906001019060200180831161075157829003601f168201915b505050505081565b600060018060008480519060200120815260200190815260200160002054119050919050565b6107a4610bdd565b6107ae6000610f38565b565b60055481565b6107be610bdd565b60008111610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f890611a44565b60405180910390fd5b8060048190555050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561091857838290600052602060002001805461088b90611c7c565b80601f01602080910402602001604051908101604052809291908181526020018280546108b790611c7c565b80156109045780601f106108d957610100808354040283529160200191610904565b820191906000526020600020905b8154815290600101906020018083116108e757829003601f168201915b50505050508152602001906001019061086c565b505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600042905090565b60035481565b610962610bdd565b60008211801561097157508082105b6109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611a44565b60405180910390fd5b81600581905550806006819055505050565b6109ca610bdd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3190611964565b60405180910390fd5b610a4381610f38565b50565b600080828051906020012090506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610b235782828281548110610adf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001604051610af691906118a1565b60405180910390201415610b105760019350505050610b2b565b8080610b1b90611cdf565b915050610a99565b506000925050505b92915050565b60088181548110610b4157600080fd5b906000526020600020016000915090508054610b5c90611c7c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8890611c7c565b8015610bd55780601f10610baa57610100808354040283529160200191610bd5565b820191906000526020600020905b815481529060010190602001808311610bb857829003601f168201915b505050505081565b610be5610ffc565b73ffffffffffffffffffffffffffffffffffffffff16610c03610923565b73ffffffffffffffffffffffffffffffffffffffff1614610c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c50906119e4565b60405180910390fd5b565b6000610c6682611004565b11610ca6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9d90611984565b60405180910390fd5b600081805190602001209050600454600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905010610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611a24565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610e375782828281548110610dc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001604051610ddb91906118a1565b60405180910390201415610e24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1b906119c4565b60405180910390fd5b8080610e2f90611cdf565b915050610d7e565b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610eb09291906111df565b50600160008381526020019081526020016000206000815480929190610ed590611cdf565b919050555082604051610ee891906118b8565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff167f33a61c410f1da6487b7371b61a28fda0b28feb517e03f447100284359ff1864860405160405180910390a3505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008060008084519050600092505b808210156111d4576000858381518110611056577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602001015160f81c60f81b9050608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156110a55760018361109e9190611b92565b92506111c0565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156110e7576002836110e09190611b92565b92506111bf565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015611129576003836111229190611b92565b92506111be565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101561116a576004836111639190611b92565b92506111bd565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156111ac576005836111a59190611b92565b92506111bc565b6006836111b99190611b92565b92505b5b5b5b5b5082806111cc90611cdf565b935050611013565b829350505050919050565b8280546111eb90611c7c565b90600052602060002090601f01602090048101928261120d5760008555611254565b82601f1061122657805160ff1916838001178555611254565b82800160010185558215611254579182015b82811115611253578251825591602001919060010190611238565b5b5090506112619190611265565b5090565b5b8082111561127e576000816000905550600101611266565b5090565b600061129561129084611aa4565b611a7f565b905080838252602082019050828560208602820111156112b457600080fd5b60005b858110156112fe57813567ffffffffffffffff8111156112d657600080fd5b8086016112e3898261139a565b855260208501945060208401935050506001810190506112b7565b5050509392505050565b600061131b61131684611ad0565b611a7f565b90508281526020810184848401111561133357600080fd5b61133e848285611c3a565b509392505050565b60008135905061135581611f34565b92915050565b600082601f83011261136c57600080fd5b813561137c848260208601611282565b91505092915050565b60008135905061139481611f4b565b92915050565b600082601f8301126113ab57600080fd5b81356113bb848260208601611308565b91505092915050565b6000813590506113d381611f62565b92915050565b6000602082840312156113eb57600080fd5b60006113f984828501611346565b91505092915050565b6000806040838503121561141557600080fd5b600061142385828601611346565b925050602083013567ffffffffffffffff81111561144057600080fd5b61144c8582860161139a565b9150509250929050565b6000806040838503121561146957600080fd5b600061147785828601611346565b9250506020611488858286016113c4565b9150509250929050565b6000602082840312156114a457600080fd5b600082013567ffffffffffffffff8111156114be57600080fd5b6114ca8482850161135b565b91505092915050565b6000602082840312156114e557600080fd5b60006114f384828501611385565b91505092915050565b60006020828403121561150e57600080fd5b600082013567ffffffffffffffff81111561152857600080fd5b6115348482850161139a565b91505092915050565b60006020828403121561154f57600080fd5b600061155d848285016113c4565b91505092915050565b6000806040838503121561157957600080fd5b6000611587858286016113c4565b9250506020611598858286016113c4565b9150509250929050565b60006115ae83836116d7565b905092915050565b6115bf81611be8565b82525050565b60006115d082611b26565b6115da8185611b49565b9350836020820285016115ec85611b01565b8060005b85811015611628578484038952815161160985826115a2565b945061161483611b3c565b925060208a019950506001810190506115f0565b50829750879550505050505092915050565b61164381611bfa565b82525050565b61165281611c06565b82525050565b6000815461166581611c7c565b61166f8186611b5a565b9450600182166000811461168a576001811461169b576116ce565b60ff198316865281860193506116ce565b6116a485611b11565b60005b838110156116c6578154818901526001820191506020810190506116a7565b838801955050505b50505092915050565b60006116e282611b31565b6116ec8185611b65565b93506116fc818560208601611c49565b61170581611db5565b840191505092915050565b600061171b82611b31565b6117258185611b76565b9350611735818560208601611c49565b61173e81611db5565b840191505092915050565b600061175482611b31565b61175e8185611b87565b935061176e818560208601611c49565b80840191505092915050565b6000611787602683611b76565b915061179282611dc6565b604082019050919050565b60006117aa600a83611b76565b91506117b582611e15565b602082019050919050565b60006117cd601383611b76565b91506117d882611e3e565b602082019050919050565b60006117f0600f83611b76565b91506117fb82611e67565b602082019050919050565b6000611813602083611b76565b915061181e82611e90565b602082019050919050565b6000611836600f83611b76565b915061184182611eb9565b602082019050919050565b6000611859600f83611b76565b915061186482611ee2565b602082019050919050565b600061187c601283611b76565b915061188782611f0b565b602082019050919050565b61189b81611c30565b82525050565b60006118ad8284611658565b915081905092915050565b60006118c48284611749565b915081905092915050565b60006020820190506118e460008301846115b6565b92915050565b6000602082019050818103600083015261190481846115c5565b905092915050565b6000602082019050611921600083018461163a565b92915050565b600060208201905061193c6000830184611649565b92915050565b6000602082019050818103600083015261195c8184611710565b905092915050565b6000602082019050818103600083015261197d8161177a565b9050919050565b6000602082019050818103600083015261199d8161179d565b9050919050565b600060208201905081810360008301526119bd816117c0565b9050919050565b600060208201905081810360008301526119dd816117e3565b9050919050565b600060208201905081810360008301526119fd81611806565b9050919050565b60006020820190508181036000830152611a1d81611829565b9050919050565b60006020820190508181036000830152611a3d8161184c565b9050919050565b60006020820190508181036000830152611a5d8161186f565b9050919050565b6000602082019050611a796000830184611892565b92915050565b6000611a89611a9a565b9050611a958282611cae565b919050565b6000604051905090565b600067ffffffffffffffff821115611abf57611abe611d86565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611aeb57611aea611d86565b5b611af482611db5565b9050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611b9d82611c30565b9150611ba883611c30565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bdd57611bdc611d28565b5b828201905092915050565b6000611bf382611c10565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611c67578082015181840152602081019050611c4c565b83811115611c76576000848401525b50505050565b60006002820490506001821680611c9457607f821691505b60208210811415611ca857611ca7611d57565b5b50919050565b611cb782611db5565b810181811067ffffffffffffffff82111715611cd657611cd5611d86565b5b80604052505050565b6000611cea82611c30565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d1d57611d1c611d28565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f656d707479206e616d6500000000000000000000000000000000000000000000600082015250565b7f6e6f7420776973686c6973742070687261736500000000000000000000000000600082015250565b7f6475706c69636174656420776973680000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6475706c696361746564206e616d650000000000000000000000000000000000600082015250565b7f6578636565642077697368206361700000000000000000000000000000000000600082015250565b7f696e76616c696420706172616d65746572730000000000000000000000000000600082015250565b611f3d81611be8565b8114611f4857600080fd5b50565b611f5481611c06565b8114611f5f57600080fd5b50565b611f6b81611c30565b8114611f7657600080fd5b5056fea26469706673582212208f43ca12e6e73336bfc4d03938ca659115c1dc84244565c74e1a5fb813a9bb1b64736f6c63430008040033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2996,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "wishCounts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 3001,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "wishes",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      },
      {
        "astId": 3004,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "baseNode",
        "offset": 0,
        "slot": "3",
        "type": "t_bytes32"
      },
      {
        "astId": 3006,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "wishCap",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 3008,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "wishPhraseStart",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 3010,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "wishPhraseEnd",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 3014,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "reservedNameMap",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 3017,
        "contract": "contracts/business/Wishlist.sol:Wishlist",
        "label": "reservedNames",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}